# -*- coding: utf-8 -*-
"""Smart city Planning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1st0ow6RpDrrinufVV9ytxu8hhm_jvvX6
"""

#import all necessary libraries for the analysis
import pandas as pd
import geopandas as gpd
import folium
import folium.plugins as plugins

# fit map to the location of choice
map_center = [6.083355358705222, 5.597967126652221]
map = folium.Map(location=map_center, zoom_start=10, control_scale =True)

# Load the shapefile of lga
lga_gdf = gpd.read_file('/content/drive/MyDrive/Nig_LGA/NGA_adm2.shp')

# Search through the columns Name_2 witht the name Ikpoba-Okha, without case consideration
Ikpoba_Okha= lga_gdf[lga_gdf['NAME_2'].str.contains('Ikpoba-Okha', case=False)]

# Add Ikpoba_Okha layer to the map with custom style
folium.GeoJson(
    Ikpoba_Okha,
    name='Ikpoba_Okha',
    style_function=lambda feature: {'fillColor': 'green', 'weight': 2}
).add_to(map)

# Set CRS of lga to EPSG:4326
Ikpoba_Okha = Ikpoba_Okha.set_crs(epsg=4326)

# Load the healthcare facilities
healthcare = gpd.read_file('/content/drive/MyDrive/health_facilities_in_Nigeria.csv')

# Convert latitude and longitude to points
healthcare_gdf = gpd.GeoDataFrame(
    healthcare,
    geometry=gpd.points_from_xy(healthcare.longitude, healthcare.latitude)
)

# Set CRS of healthcare_gdf to EPSG:4326
healthcare_gdf = healthcare_gdf.set_crs(epsg=4326)

# Clip healthcare_facility_gdf points inside Sapele boundary
healthcare_gdf = gpd.clip(healthcare_gdf, Ikpoba_Okha)

# Check if there are duplicate in the cliped items
healthcare_gdf.duplicated().sum()

# Add the clipped healthcare facilities to the map
for idx, row in healthcare_gdf.iterrows():
    folium.Marker(location=[row.geometry.y, row.geometry.x],
                        radius=1,
                        icon=folium.Icon(color='red', icon='ambulance', prefix='fa'),
                        popup=f": {row['prmry_name']}").add_to(map)

# Load the shapefile
building_footprint = gpd.read_file('/content/drive/MyDrive/Building_FootPrint.xlsx')

# Convert latitude and longitude to points
building_footprint_gdf = gpd.GeoDataFrame(
    building_footprint,
    geometry=gpd.points_from_xy(building_footprint.longitude, building_footprint.latitude)
)

# Set CRS of building_footprint_gdf to EPSG:4326
building_footprint_gdf = building_footprint_gdf.set_crs(epsg=4326)

# Clip building_footprint_gdf points inside Sapele boundary
building_footprint_gdf = gpd.clip(building_footprint_gdf, Ikpoba_Okha)

# Extract latitude and longitude values from building_footprint_gdf
building_locations = [[point.y, point.x] for point in building_footprint_gdf.geometry]

# Create a heatmap
building_heatmap = plugins.HeatMap(
    name='Building Heatmap',
    data=building_locations,
    radius=15,
    max_val=100,
    gradient={0.4: 'yellow', 0.65: 'lime', 1: 'red'},
    blur=10,
    min_opacity=0.5
)

import branca.colormap as cm

# Define linear color gradient
color_gradient = cm.LinearColormap(
    ['yellow', 'lime', 'red'],
    vmin=0,
    vmax=1
)
color_gradient.add_to(map)

# Add heatmap to the map
building_heatmap.add_to(map)

# Create a marker cluster
building_cluster = plugins.MarkerCluster(name='Building Footprints').add_to(map)

# Add markers to the cluster
for idx, row in building_footprint_gdf.iterrows():
    folium.Marker(
        location=[row.geometry.y, row.geometry.x],
        icon=folium.Icon(color='blue', icon='home', prefix='fa'),
    ).add_to(building_cluster)

# Add plugins to the map,  address search, Distance and Area, draw shapes, Fullscreen, toggle layers
plugins = [
    folium.plugins.Geocoder(position='topleft'),
    folium.plugins.MeasureControl(position='bottomleft'),
    folium.plugins.Draw(),
    folium.plugins.Fullscreen(position='topright'),
    folium.LayerControl(position='topright').add_to(map),
    folium.plugins.LocateControl(),
    folium.plugins.MiniMap(),
]

# Add plugins to the map in a single loop
for plugin in plugins:
    plugin.add_to(map)

map

map.save('smart_city.html')